function updateMapRulers(mapZone) {
	var rx = mapZone.attr('rx');
	var ry = mapZone.attr('ry');
	$('#map .mapruler').removeClass('hoverzone');
	$('#map .mapruler.ruler_y'+ry+',#map .mapruler.ruler_x'+rx ).addClass('hoverzone');
}
function selectZone(mapZone) {
	var rx = mapZone.attr('rx');
	var ry = mapZone.attr('ry');
	$('#map .mapzone, #map .mapruler').removeClass('selectedZone');
	$('#map #x'+rx+'y'+ry+',#map .mapruler.ruler_y'+ry+',#map .mapruler.ruler_x'+rx).addClass('selectedZone');
	var ax = mapZone.attr('ax');
	var ay = mapZone.attr('ay');
	updateBox(ax,ay,rx,ry);
}
function updateBox(x,y,rx,ry) {
	var zone;
	var infoBox = $('#box-content #zone-info');
	infoBox.html('<h3>Zone ['+rx+'|'+ry+']</h3>');
	infoBox.append('<p>Entfernung: '+ calcAP(rx,ry) +'AP, '+ calcKM(rx,ry) +'km</p>');
	if ( zone = data.map['y'+y]['x'+x] ) {
		// building
		if ( zone.building != undefined ) {
			if ( zone.building.dried != undefined && zone.building.dried == 1 ) {
				infoBox.append('<p class="zone-building"><strong>'+ zone.building.name +'</strong><br/><span class="minus">Geb채ude ist leer.</span> <a class="interactive plus" href="javascript:void(0);">regenerieren</a></p>');
			}
			else {
				infoBox.append('<p class="zone-building"><strong>'+ zone.building.name +'</strong><br/><span class="plus">Geb채ude ist durchsuchbar.</span> <a class="interactive minus" href="javascript:void(0);">leeren</a></p>');
			}
		}
		// regeneration
		if ( zone.dried != undefined && zone.dried == 1 ) {
			infoBox.append('<p class="zone-status zone-status-empty"><img src="'+data.system.icon+'tag_5.gif" /> <span class="minus">Zone ist leer.</span> <a class="interactive plus" href="javascript:void(0);">regenerieren</a></p>');
		}
		else {
			infoBox.append('<p class="zone-status zone-status-full"><img src="'+data.system.icon+'small_gather.gif" /> <span class="plus">Zone ist regeneriert.</span> <a class="interactive minus" href="javascript:void(0);">leeren</a></p>');
		}
		// zombies
		if (zone.z > 0) {
			infoBox.append('<p class="zone-zombies">'+ zone.z +' Zombies <a class="interactive" href="javascript:void(0);">aktualisieren</a></p>');
		}
		else {
			infoBox.append('<p class="zone-zombies">0 Zombies <a class="interactive" href="javascript:void(0);">aktualisieren</a></p>');
		}
		// citizens
		if ( zone['citizens'] != undefined && !(rx == 0 && ry == 0) ) {
			var cc = 0;
			var clist = '';
			for ( cid in zone['citizens'] ) {
				cc++;
				if ( clist != '' ) { clist += ', '; }
				clist += zone['citizens'][cid]['name'];
			}
			if ( cc > 0 ) {
				infoBox.append('<p class="zone-citizens">'+ cc +' B체rger: '+ clist +'</p>');
			}
		}
		// items
		if ( zone['items'] != undefined && !(rx == 0 && ry == 0) ) {
			infoBox.append('<div id="zi_x'+rx+'_y'+ry+'" class="zone-items clearfix"></div>');
			for ( i in zone.items ) {
				var item = zone.items[i];
				if ( data.items[item.id] != undefined ) {
					var raw_item = data.items[item.id];
					var brokenItem = item.broken == 1 ? ' broken' : '';
					var defItem = raw_item.category == 'Armor' ? ' defense' : '';
					$('#zi_x'+rx+'_y'+ry).append('<div class="zone-item click'+brokenItem+defItem+'" state="0" ref="'+raw_item.id+'"><img src="'+data.system.icon+'item_'+raw_item.image+'.gif" title="'+raw_item.name+' (ID: '+Math.abs(item.id)+')" />&nbsp;'+item.count+'</div>');
				}
			}
		}
		// update status
		var monat = new Array("Januar", "Februar", "M채rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember");
		var updText = 'Letzte Aktualisierung ';
		if ( zone.updatedOn != undefined ) {
			var date = new Date(zone.updatedOn * 1000);
			
			updText += 'am ' + date.getDate() + '. ' + monat[date.getMonth()] + ' ' + date.getFullYear() + ', ' + date.getHours() + ':' + (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ' Uhr ';
		}
		if ( zone.updatedBy != undefined ) {
			updText += 'durch ' + zone.updatedBy;
		}
		infoBox.append('<p class="zone-lastupdate">'+updText+'</p>');
	}
	else {
		
	}
}
function calcAP(x,y) {
	return Math.abs(x) + Math.abs(y);
}
function calcKM(x,y) {
	return Math.round(Math.sqrt(x * x + y * y));
}
function highlightZoneWithItem(zoneitem) {
	var itemid = zoneitem.attr('ref');
	if (zoneitem.hasClass('broken')) {
		itemid *= -1;
	}
	for ( i = 0; i < data['height']; i++ ) {
		for ( j = 0; j < data['width']; j++ ) {
			var mx = 'x' + j;
			var my = 'y' + i;
			var rx = j - data['tx'];
			var ry = data['ty'] - i;
			if ( data.map[my][mx] != undefined ) {
				if ( data.map[my][mx]['items'] != undefined && data.map[my][mx]['items'].length > 0 && !(rx == 0 && ry == 0) ) {
					var zoneItems = data.map[my][mx]['items'];
					for ( zi in zoneItems ) {
						var zitem = zoneItems[zi];
						if ( zitem.id == itemid ) {
							highlightZone(rx,ry);
						}						
					}	
				}
			}
		}
	}
}
function highlightZonesWithItem() {
	$('.mapzone').removeClass('highlight');
	$('div.zone-item[state="1"]').each(function() { highlightZoneWithItem($(this)); });
}
function highlightZone(x,y) {
	$('#x'+x+'y'+y).addClass('highlight');
}

// GENERATE
$(document).ready(function() {
	var fm_url = 'http://dv.sindevel.com/fm/';
	var system = data['system'];
	var username = system['owner_name'];
	$('#owner-name').html(username);
	data.mapitem = [];
	data.mapItemCollection = [];
	data.mapItemCollectionSorted = [];
	data.mapItemCounter = 0;
	
	for ( i = 0; i < data['height']; i++ ) {
		var maprow = $(document.createElement('ul')).addClass('maprow');
		for ( j = 0; j < data['width']; j++ ) {
			var ax = j;
			var ay = i;
			var mx = 'x' + j;
			var my = 'y' + i;
			var rx = j - data['tx'];
			var ry = data['ty'] - i;
			var rzd = null;
			var mapzone = $(document.createElement('li')).addClass('mapzone').attr('rx',rx).attr('ry',ry).attr('ax',ax).attr('ay',ay);
			mapzone.attr('id','x'+rx+'y'+ry);
			if ( data.ox == j && data.oy == i ) {
				mapzone.addClass('selectedZone');
			}
			if ( data.map[my] != undefined && data.map[my][mx] != undefined ) {
			
				if ( data.map[my][mx]['items'] != undefined && data.map[my][mx]['items'].length > 0 && !(rx == 0 && ry == 0) ) {
					var zoneItems = data.map[my][mx]['items'];
					for ( zi in zoneItems ) {
						var zitem = zoneItems[zi];
						if ( data.mapItemCollection[zitem.id] != undefined ) {
							data.mapItemCollection[zitem.id] += zitem.count;
						}
						else {
							data.mapItemCollection[zitem.id] = zitem.count;
						}
						/*if ( data.items[zitem.id] != undefined ) {
							var ritem = data.items[zitem.id];
							if ( data.mapitems[ritem.category][ritem.id] != undefined ) {
								data.mapitems[ritem.category][ritem.id] += zitem.count;
							}
							else {
								data.mapitems[ritem.category][ritem.id] = zitem.count;
							}
							
						}*/
					}					
				}	

				/*
				if ( data.map[my][mx]['items'] != undefined && data.map[my][mx]['items'].length > 0 && !(rx == 0 && ry == 0) ) {
					var zoneItems = data.map[my][mx]['items'];
					for ( zi in zoneItems ) {
						var zitem = zoneItems[zi];
						var sortedId = 1000000 - (parseInt(zitem.count) * 1000 + parseInt(data.mapItemCounter));
						data.mapItemCounter++;
						data.mapItemCollection[sortedId] = zitem;
					}					
				}	*/
			
				if ( data.map[my][mx]['danger'] != undefined && data.map[my][mx]['danger'] != null ) {
					mapzone.addClass('danger'+ data.map[my][mx]['danger']);
					rzd = data.map[my][mx]['danger'];
				}
				else if ( data.map[my][mx]['z'] != undefined && data.map[my][mx]['z'] != null ) {
					mapzone.attr('z',data.map[my][mx]['z']);
					if ( data.map[my][mx]['z'] == 0 ) {
						mapzone.addClass('danger0');
					}
					else if ( data.map[my][mx]['z'] == 1 ) {
						mapzone.addClass('danger1');
						rzd = 1;
					}
					else if ( data.map[my][mx]['z'] >= 2 && data.map[my][mx]['z'] <= 4 ) {
						mapzone.addClass('danger2');
						rzd = 2;
					}
					else if ( data.map[my][mx]['z'] >= 5 && data.map[my][mx]['z'] <= 8 ) {
						mapzone.addClass('danger3');
						rzd = 3;
					}
					else if ( data.map[my][mx]['z'] > 8 ) {
						mapzone.addClass('danger4');
						rzd = 4
					}
					else {
						mapzone.addClass('danger0');
					}
				}
				else {
					mapzone.addClass('danger0');
				}
				if ( data.map[my][mx]['tag'] != undefined && data.map[my][mx]['tag'] != null ) {
					mapzone.addClass('tag'+ data.map[my][mx]['tag']);
				}
				if ( data.map[my][mx]['nvt'] != undefined && data.map[my][mx]['nvt'] == 1 ) {
					mapzone.addClass('nvt');
				}
				if ( data.map[my][mx]['building'] != undefined && !(rx == 0 && ry == 0) ) {
					var building = $(document.createElement('div')).addClass('building');
					mapzone.append(building);
				}
				if ( data.map[my][mx]['dried'] != undefined && !(rx == 0 && ry == 0) ) {
					var zsi = $(document.createElement('img')).addClass('zone-status-img');
					if (data.map[my][mx]['dried'] == 0) {
						zsi.attr('src',data.system.icon+'small_gather.gif');
					}
					else {
						zsi.attr('src',data.system.icon+'tag_5.gif');
					}					
					mapzone.append(zsi);
				}
				if ( data.map[my][mx]['citizens'] != undefined && !(rx == 0 && ry == 0) ) {
					var cc = 0;
					for ( cid in data.map[my][mx]['citizens'] ) {
						cc++;
					}
					var citidot = $(document.createElement('div')).addClass('citizen');
					citidot.attr('style','background: transparent url("' + fm_url + 'img/citidots.php?cs=2&cc=' + cc + '") no-repeat;');
					mapzone.append(citidot);
				}
				if ( rzd > 0 ) {
					var zombdot = $(document.createElement('div')).addClass('zombies');
					zombdot.attr('style','background: transparent url("' + fm_url + 'img/citidots.php?cs=1&cc=' + rzd + '") no-repeat;');
					mapzone.append(zombdot);
				}
			}
			else {
				mapzone.addClass('nyv');
			}
			if ( rx == 0 && ry == 0 ) {
				mapzone.addClass('city');
			}
			maprow.append(mapzone);
		}
		var maprulerF = $(document.createElement('li')).addClass('mapruler').addClass('ruler_y'+ry).addClass('first').html(ry);
		var maprulerL = maprulerF.clone().removeClass('first').addClass('last');
		maprow.prepend(maprulerF);
		maprow.append(maprulerL);
		$('#map').append(maprow);
	}
	var maprulebarT = $(document.createElement('ul')).addClass('maprow').addClass('maprulebar').addClass('maprulebar-top');
	for ( j = 0; j < data['width']; j++ ) {
		var maprulex = $(document.createElement('li')).addClass('mapruler').addClass('ruler_x'+(j - data['tx'])).html(j - data['tx']);
		maprulebarT.append(maprulex);
	}
	var mapruleoF = $(document.createElement('li')).addClass('mapcorner').addClass('first');
	var mapruleoL = mapruleoF.clone().removeClass('first').addClass('last');
	maprulebarT.prepend(mapruleoF);
	maprulebarT.append(mapruleoL);
	var maprulebarB = maprulebarT.clone().removeClass('maprulebar-top').addClass('maprulebar-bottom');
	$('#map').prepend(maprulebarT);
	$('#map').append(maprulebarB);
	
	$('#map .mapzone').live({
			click: function() {
					selectZone($(this));
			},
			mouseover: function(e) {
					updateMapRulers($(this));
					//if (showHoverInformation()) { showHoverBox(e, $(this).attr('id')); }
			},
			mouseout: function() {
					//highlightMapHeaders($(this), false);
					//if (showHoverInformation()) { hideHoverBox(); }
			},
			mousemove: function(e) {
					//if (showHoverInformation()) { moveHoverBox(e); }
			}
	});
	$('#item-info .zone-item, #town-info .zone-item').live({
		click: function() {
			$(this).attr('state', (parseInt($(this).attr('state')) + Math.pow(-1, $(this).attr('state'))));
			highlightZonesWithItem();
		}
	});
	
	$("ul#box-tabs li").click(function (e) { 
		e.preventDefault();
		$('li.box-tab').removeClass('active');
		$(this).addClass('active')
		var box = $(this).attr('ref');
		$('div.box-tab-content').addClass('hideme');
		$('div#'+box).removeClass('hideme');
	});
	
	/*for ( c in data.mapitems ) {
		var itemsubbox = $('#item-info-'+data.mapitems[c]['cat']);
		//alert(data.mapitems[c]['cat']);
		for ( d in data.mapitems[c] ) {
			
			if ( d != 'cat' ) {
				var itemcount = data.mapitems[c][d];
				if ( data.items[Math.abs(d)] != undefined && itemcount > 0 ) {
					var raw_item = data.items[Math.abs(d)];
					var brokenItem = d < 0 ? ' broken' : '';
					var defItem = raw_item.category == 'Armor' ? ' defense' : '';
					itemsubbox.append('<div class="zone-item click'+brokenItem+defItem+'" state="0" ref="'+raw_item.id+'"><img src="'+data.system.icon+'item_'+raw_item.image+'.gif" title="'+raw_item.name+' (ID: '+Math.abs(raw_item.id)+')" />&nbsp;'+itemcount+'</div>');
				}
			}
		}
		
		var zitem = zoneItems[zi];
		var sortedId = 1000000 - (parseInt(itemcount) * 1000 + parseInt(data.mapItemCounter));
		data.mapItemCounter++;
		data.mapItemCollection[sortedId] = d;
	}*/
	
	function sortNumber(a,b){ return a - b; } 
	
	for ( var m in data.mapItemCollection ) {
		var sortedId = 1000000 - (parseInt(data.mapItemCollection[m]) * 1000 + parseInt(data.mapItemCounter));
		data.mapItemCounter++;
		data.mapItemCollectionSorted[sortedId] = m;
	}
	data.mapItemCollectionSorted.sort(sortNumber);
	
	for ( var c in data.mapItemCollectionSorted ) {
		var a = data.mapItemCollectionSorted[c];
		var itemcount = data.mapItemCollection[a];
		var b = Math.abs(a);
		if ( data.items[b] != undefined ) {
			var raw_item = data.items[b];
			var brokenItem = a < 0 ? ' broken' : '';
			var defItem = raw_item.category == 'Armor' ? ' defense' : '';
			$('#item-info-'+raw_item.category).append('<div class="zone-item click'+brokenItem+defItem+'" state="0" ref="'+raw_item.id+'"><img src="'+data.system.icon+'item_'+raw_item.image+'.gif" title="'+raw_item.name+' (ID: '+Math.abs(raw_item.id)+')" />&nbsp;'+itemcount+'</div>');
		}
	}
	
	for ( var a in data.bankSorted ) {
		var b = data.bankSorted[a];
		var item = data.bank[b];
		if ( data.items[b] != undefined ) {
			var raw_item = data.items[b];
			var brokenItem = item.broken == 1 ? ' broken' : '';
			var defItem = raw_item.category == 'Armor' ? ' defense' : '';
			$('#town-info-'+raw_item.category).append('<div class="zone-item click'+brokenItem+defItem+'" state="0" ref="'+raw_item.id+'"><img src="'+data.system.icon+'item_'+raw_item.image+'.gif" title="'+raw_item.name+' (ID: '+Math.abs(raw_item.id)+')" />&nbsp;'+item.count+'</div>');
		}
	}		
	
	// "click".current-zone
	$('#x'+(data.ox - data.tx)+'y'+(data.ty - data.oy)).click();

}); // END GENERATE